{"version":3,"sources":["components/pages/home/home.jsx","App.jsx","serviceWorker.js","index.js"],"names":["Home","className","Button","disabled","iconDescription","kind","onClick","onFocus","renderIcon","size","tabIndex","type","App","props","state","user","details","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"oVAuKeA,G,MAjKF,WACT,OACI,oCACA,yBAAKC,UAAU,iBACP,yBAAKA,UAAU,qBACX,wBAAIA,UAAU,wBAAd,QAEJ,yBAAKA,UAAU,sBAEX,yBAAKA,UAAU,qBACX,yBAAKA,UAAU,cACX,yBAAKA,UAAU,mBAQnB,yBAAKA,UAAU,oBAIX,wBAAIA,UAAU,MACV,4BAAI,kBAAC,IAAD,CAAuBA,UAAU,cAArC,oCACA,4BAAI,kBAAC,IAAD,CAAoBA,UAAU,cAAc,kEAChD,4BAAI,kBAAC,IAAD,CAAUA,UAAU,cAAxB,qBACA,4BAAI,kBAAC,IAAD,CAAgBA,UAAU,cAA9B,6CASZ,yBAAKA,UAAU,sBACX,yBAAKA,UAAU,SACX,wCAEJ,0BAAMA,UAAU,iBAqDZ,yBAAKA,UAAU,iBACX,kBAACC,EAAA,EAAD,CACCD,UAAU,cACVE,UAAU,EACVC,gBAAgB,eAChBC,KAAK,UACLC,QAAS,aACTC,QAAS,aACTC,WAAY,kBAAM,kBAAC,IAAD,OAClBC,KAAK,UACLC,SAAU,EACVC,KAAK,UAVN,cAgBR,yBAAKV,UAAU,0BACX,0BAAMA,UAAU,SAAhB,gEAIZ,yBAAKA,UAAU,yBACX,0CACA,kBAAC,IAAD,QAIZ,yBAAKA,UAAU,kBACX,4BAAQA,UAAU,iBACd,6CAEJ,yBAAKA,UAAU,kBACX,wCACA,wCACA,wCACA,yCAEJ,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,QACf,yBAAKA,UAAU,QACf,yBAAKA,UAAU,QACf,yBAAKA,UAAU,SAEnB,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,OAAM,qVACrB,yBAAKA,UAAU,OAAM,4xBAEzB,gCACI,sCACA,iCACI,2CACA,2CACA,2CACA,4CAEJ,iCACI,sCACA,sCACA,sCACA,4CCtILW,E,kDAhBX,WAAYC,GAAO,IAAD,8BAChB,cAAMA,IACDC,MAAQ,CACXC,KAAM,GACNC,QAAS,IAJK,E,qDASlB,OACE,kBAAC,EAAD,U,GAXcC,IAAMC,W,MCINC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.15fa9c41.chunk.js","sourcesContent":["import React from 'react'\r\nimport { TextInput, Button, Checkbox, Link } from 'carbon-components-react';\r\nimport { Login16, DownToBottom24, WatsonHealthZoomPan32, DocumentDownload32, Wallet32, Notification32 } from '@carbon/icons-react';\r\n\r\nimport './home.css';\r\n\r\nconst Home = () => {\r\n    return (\r\n        <>\r\n        <div className=\"welcome-first\">\r\n                <div className=\"invoices-ibm-icon\">\r\n                    <h3 className=\"white-color padding1\">IBM</h3>\r\n                </div>\r\n                <div className=\"welcome-box shadow\">\r\n                    \r\n                    <div className=\"box-left padding2\">\r\n                        <div className=\"title-left\">\r\n                            <div className=\"logo-invoices\"></div>\r\n                            {/* <h1 className=\"white-color\">\r\n                                Invoices@IBM\r\n                                {/* Providing invoice and payment information to Clients,\r\n                                Partners and IBM employees\r\n                            </h1> \r\n                            */}\r\n                        </div>\r\n                        <div className=\"body white-color\">\r\n                                {/* <h3 className=\"weight300\">Providing invoice and payment information to Clients,\r\n                                Partners and IBM employees\r\n                                </h3> */}\r\n                            <ul className=\"ul\">\r\n                                <li><WatsonHealthZoomPan32 className=\"align-svg\" /> Search and view invoice details</li>\r\n                                <li><DocumentDownload32 className=\"align-svg\" /><span>Download PDF and/or Spreadsheet</span></li>\r\n                                <li><Wallet32 className=\"align-svg\" /> Pay the invoices</li>\r\n                                <li><Notification32 className=\"align-svg\" />Receive notifications for new invoices</li>\r\n                            </ul>\r\n                            {/* <p>Search and view invoice details</p>\r\n                            <p>Download PDF and/or Spreadsheet</p>\r\n                            <p>Raise online requests</p>\r\n                            <p>Receive notifications for new invoices</p> */}\r\n                        </div>\r\n                    </div>\r\n                    {/*  */}\r\n                    <div className=\"box-right padding2\">\r\n                        <div className=\"title\">\r\n                            <h2>Sign in</h2>\r\n                        </div>\r\n                        <form className=\"login-wrapper\">\r\n                            {/* <TextInput\r\n                             className=\"signin-input\"\r\n                            defaultValue=\"\"\r\n                            disabled={false}\r\n                            id=\"test1\"\r\n                            invalid={false}\r\n                            invalidText=\"A valid value is required\"\r\n                            light={false}\r\n                            onChange={function noRefCheck(){}}\r\n                            onClick={function noRefCheck(){}}\r\n                            placeholder=\"Username\"\r\n                            size=\"xl\"\r\n                            type=\"email\"\r\n                            />\r\n                            <TextInput\r\n                             className=\"signin-input\"\r\n                            defaultValue=\"password\"\r\n                            disabled={false}\r\n                            id=\"test2\"\r\n                            invalid={false}\r\n                            invalidText=\"A valid value is required\"\r\n                            light={false}\r\n                            onChange={function noRefCheck(){}}\r\n                            onClick={function noRefCheck(){}}\r\n                            placeholder=\"Password\"\r\n                            size=\"xl\"\r\n                            type=\"password\"\r\n                            />\r\n                            <div className=\"\">\r\n                                <div className=\"inline-block padding-right1\">\r\n                                    <legend className=\"bx--label\">\r\n                                    </legend>\r\n                                    <Checkbox\r\n                                        className=\"\"\r\n                                        id=\"checkbox-label-1\"\r\n                                        indeterminate={false}\r\n                                        labelText=\"Remember ID\"\r\n                                        onChange={function noRefCheck(){}}\r\n                                        wrapperClassName=\"\"\r\n                                    />\r\n                                </div>\r\n                                <div className=\"inline-block\">\r\n                                    <Link\r\n                                    className=\"\"\r\n                                    href=\"#\"\r\n                                    onClick={function noRefCheck(){}}\r\n                                    >\r\n                                    Forgot ID?\r\n                                    </Link>\r\n                                </div>\r\n                            </div> */}\r\n\r\n                            <div className=\"signin-button\">\r\n                                <Button \r\n                                 className=\"white-color\"\r\n                                 disabled={false}\r\n                                 iconDescription=\"sign in icon\"\r\n                                 kind=\"primary\"\r\n                                 onClick={function noRefCheck(){}}\r\n                                 onFocus={function noRefCheck(){}}\r\n                                 renderIcon={() => <Login16 />}\r\n                                 size=\"default\"\r\n                                 tabIndex={0}\r\n                                 type=\"button\"\r\n                               >\r\n                                 Continue\r\n                               </Button>\r\n                            </div>\r\n                        </form>\r\n                        <div className=\"additional-info center\">\r\n                            <span className=\"small\">Â© Copyright IBM Corp. 2014, 2020. All rights reserved.</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"icon-down white-color\">\r\n                    <p>scroll down</p>\r\n                    <DownToBottom24/>\r\n                </div>\r\n\r\n        </div>\r\n        <div className=\"welcome-second\">\r\n            <header className=\"header center\">\r\n                <h1>Invoices@IBM</h1>\r\n            </header>\r\n            <div className=\"little-section\">\r\n                <span>text 1</span>\r\n                <span>text 2</span>\r\n                <span>text 3</span>\r\n                <span>text 4</span>\r\n            </div>\r\n            <div className=\"big-section-box4\">\r\n                <div className=\"box\"></div>\r\n                <div className=\"box\"></div>\r\n                <div className=\"box\"></div>\r\n                <div className=\"box\"></div>\r\n            </div> \r\n            <div className=\"big-section-box2\">\r\n                <div className=\"box\"><p>Lorem, ipsum dolor sit amet consectetur adipisicing elit. Dolor veritatis maxime facere delectus exercitationem recusandae non? Ad neque non doloremque sequi qui, mollitia velit. Quaerat, consectetur aspernatur, voluptas sunt possimus voluptate expedita, accusantium alias ex aperiam suscipit quis harum iste!</p></div>\r\n                <div className=\"box\"><p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Omnis nam, illum sint porro eveniet impedit soluta ipsa sunt ducimus animi cum iste tenetur repellat qui, temporibus dolores explicabo maxime eligendi maiores accusamus! Magni pariatur, maxime illo exercitationem qui facere omnis commodi saepe reiciendis aliquam neque incidunt explicabo eum quos temporibus iusto maiores, alias non eaque nesciunt amet inventore? Omnis porro odit rem. Rerum libero aperiam corporis similique amet ex doloribus laudantium neque suscipit cupiditate. Dolor autem eligendi nesciunt repudiandae ducimus voluptas accusamus. Distinctio qui, quas asperiores nam minima nesciunt maiores consequuntur inventore adipisci sequi provident, praesentium corrupti culpa excepturi impedit!</p></div>\r\n            </div>\r\n            <footer>\r\n                <h2>Footer</h2>\r\n                <section>\r\n                    <span>text 1 | </span>\r\n                    <span>text 2 | </span>\r\n                    <span>text 3 | </span>\r\n                    <span>text 4 | </span>\r\n                </section>\r\n                <section>\r\n                    <a>link a </a>\r\n                    <a>link b </a>\r\n                    <a>link c </a>\r\n                    <a>link d </a>\r\n                </section>\r\n            </footer>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Home;","import React from 'react';\n//import './App.scss';\n//import './index.css'\nimport {\n  // MainPage,\n  Home,\n} from './components/pages/index';\n  \n  class App extends React.Component {\n    constructor(props){\n      super(props)\n      this.state = {\n        user: {},\n        details: {},\n    }\n  }\n  \n  render(){\n    return (\n      <Home />\n    )\n  }\n};\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.jsx';\nimport './index.css'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}